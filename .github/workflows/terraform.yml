name: 'Terraform Azure Deployment'

on:
  push:
    branches:
      - development

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Azure CLI command
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
            
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.11

      - name: Terraform Init
        run: terraform init 
        working-directory: ./
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./

      - name: Terraform Plan
        run: terraform plan -var-file=prod.tfvars -out=tfplan
        working-directory: ./
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/development'
        run: terraform apply -auto-approve tfplan
        working-directory: ./
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

# ##{{ Note:- "IF you want to Destroy all Resources then uncomment below code" }}###

#   destroy:
#     runs-on: ubuntu-latest
#     # needs: terraform

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.0.11

#       - name: Terraform Init for Destroy
#         run: terraform init
#         working-directory: ./modules/
#         env:
#           ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#           ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
#           ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
#           ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

#       - name: Terraform Destroy
#         run: terraform destroy -auto-approve ##-target=azurerm_container_registry.acr##
#         working-directory: ./modules/
#         env:
#           ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#           ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
#           ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
#           ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}


### Note:- In this Script creating (1)Cert-manager, (2)Nginx-ingress, (3)Cluster-issuer with in differant Namespaces  ###
  script: 
    runs-on: windows-latest
    needs: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Execution Policy (Windows Only)
        run: Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope Process
        shell: pwsh
        if: runner.os == 'Windows' 

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run PowerShell Script
        run: ./script/setup.ps1
        shell: pwsh